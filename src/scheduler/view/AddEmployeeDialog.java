/*
 * Dialog for creating a new customer and adding to database through database handler
 */

package scheduler.view;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import scheduler.controller.EmployeeService;
import scheduler.model.Employee;

public class AddEmployeeDialog extends JDialog {

	private static final long serialVersionUID = 1L;
	private JTextField username;
	private JTextField firstName;
	private JTextField lastName;
	private JTextField phoneNumber;
	private JTextField emailAddress;
	private JPasswordField passwordField;
	private JPasswordField passwordVerificationField;
	private JCheckBox supervisorCheckBox = new JCheckBox();
	EmployeeService employeeService = new EmployeeService();

	/**
	 * Create the dialog.
	 */
	public AddEmployeeDialog() {
		setTitle("Add Employee");
		setBounds(100, 100, 450, 358);
		getContentPane().setLayout(new BorderLayout());
		setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				JButton addButton = new JButton("Add");
				addButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						String pass = new String(passwordField.getPassword());
						String verifyPass = new String(passwordVerificationField.getPassword());

						// Verify passwords match
						if (!pass.equals(verifyPass)) {
						    JOptionPane.showMessageDialog(AddEmployeeDialog.this, "Passwords do not match!", "Error", JOptionPane.ERROR_MESSAGE);
						    return;
						} else {
							String position = supervisorCheckBox.isSelected() ? "Supervisor": "Technician";
							
							try {
								String uName = username.getText().trim();
								String fName = firstName.getText().trim();
								String lName = lastName.getText().trim();
								String phone = phoneNumber.getText().trim();
								String email = emailAddress.getText().trim();
								
								if (uName.isEmpty() || fName.isEmpty() || lName.isEmpty() || phone.isEmpty() || email.isEmpty()) {
									JOptionPane.showMessageDialog(AddEmployeeDialog.this,
								            "All fields are required.",
								            "Missing Input",
								            JOptionPane.WARNING_MESSAGE);
								    return;
								}
								
								//Creates a new employee, Employee ID autogenerated in employee service class
								Employee employee = new Employee(
										uName, 
										pass, 
										fName,
										lName,
										phone,
										email,
										position);
								
								employeeService.addEmployee(employee);
								
							} catch (IllegalArgumentException ex) {
						        JOptionPane.showMessageDialog(AddEmployeeDialog.this,
						                ex.getMessage(),
						                "Invalid Input",
						                JOptionPane.ERROR_MESSAGE);
						    } catch (Exception ex) {
						        JOptionPane.showMessageDialog(AddEmployeeDialog.this,
						                "An unexpected error occurred: " + ex.getMessage(),
						                "Error",
						                JOptionPane.ERROR_MESSAGE);
						    }
						}
						dispose();
					}
				});
				addButton.setActionCommand("OK");
				buttonPane.add(addButton);
				getRootPane().setDefaultButton(addButton);
			}
			{
				JButton cancelButton = new JButton("Cancel");
				cancelButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						dispose();
					}
				});
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}
		}
		JPanel panel = new JPanel();
		panel.setBorder(new EmptyBorder(10, 10, 10, 10));
		getContentPane().add(panel, BorderLayout.CENTER);
		GridBagLayout gbl_panel = new GridBagLayout();
		gbl_panel.columnWidths = new int[]{156, 86, 0};
		gbl_panel.rowHeights = new int[]{0, 0, 0, 20, 0, 0, 0, 0, 0};
		gbl_panel.columnWeights = new double[]{1.0, 1.0, Double.MIN_VALUE};
		gbl_panel.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel.setLayout(gbl_panel);
		{
			JLabel txtpnUsername = new JLabel();
			txtpnUsername.setText("Username:");
			GridBagConstraints gbc_txtpnUsername = new GridBagConstraints();
			gbc_txtpnUsername.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnUsername.fill = GridBagConstraints.VERTICAL;
			gbc_txtpnUsername.gridx = 0;
			gbc_txtpnUsername.gridy = 0;
			panel.add(txtpnUsername, gbc_txtpnUsername);
		}
		{
			username = new JTextField();
			GridBagConstraints gbc_username = new GridBagConstraints();
			gbc_username.insets = new Insets(0, 0, 5, 0);
			gbc_username.fill = GridBagConstraints.HORIZONTAL;
			gbc_username.gridx = 1;
			gbc_username.gridy = 0;
			panel.add(username, gbc_username);
		}
		{
			JLabel txtpnPassword = new JLabel();
			txtpnPassword.setText("Password:");
			GridBagConstraints gbc_txtpnPassword = new GridBagConstraints();
			gbc_txtpnPassword.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnPassword.fill = GridBagConstraints.VERTICAL;
			gbc_txtpnPassword.gridx = 0;
			gbc_txtpnPassword.gridy = 1;
			panel.add(txtpnPassword, gbc_txtpnPassword);
		}
		{
			passwordField = new JPasswordField();
			GridBagConstraints gbc_passwordField = new GridBagConstraints();
			gbc_passwordField.insets = new Insets(0, 0, 5, 0);
			gbc_passwordField.fill = GridBagConstraints.HORIZONTAL;
			gbc_passwordField.gridx = 1;
			gbc_passwordField.gridy = 1;
			panel.add(passwordField, gbc_passwordField);
		}
		{
			JLabel txtpnReenterPassword = new JLabel();
			txtpnReenterPassword.setText("Re-enter Password");
			GridBagConstraints gbc_txtpnReenterPassword = new GridBagConstraints();
			gbc_txtpnReenterPassword.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnReenterPassword.fill = GridBagConstraints.VERTICAL;
			gbc_txtpnReenterPassword.gridx = 0;
			gbc_txtpnReenterPassword.gridy = 2;
			panel.add(txtpnReenterPassword, gbc_txtpnReenterPassword);
		}
		{
			passwordVerificationField = new JPasswordField();
			GridBagConstraints gbc_passwordVerificationField = new GridBagConstraints();
			gbc_passwordVerificationField.insets = new Insets(0, 0, 5, 0);
			gbc_passwordVerificationField.fill = GridBagConstraints.HORIZONTAL;
			gbc_passwordVerificationField.gridx = 1;
			gbc_passwordVerificationField.gridy = 2;
			panel.add(passwordVerificationField, gbc_passwordVerificationField);
		}
		{
			JLabel txtpnFirstName = new JLabel();
			txtpnFirstName.setText("First Name:");
			GridBagConstraints gbc_txtpnFirstName = new GridBagConstraints();
			gbc_txtpnFirstName.anchor = GridBagConstraints.NORTH;
			gbc_txtpnFirstName.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnFirstName.gridx = 0;
			gbc_txtpnFirstName.gridy = 3;
			panel.add(txtpnFirstName, gbc_txtpnFirstName);
		}
		{
			firstName = new JTextField();
			GridBagConstraints gbc_firstName = new GridBagConstraints();
			gbc_firstName.insets = new Insets(0, 0, 5, 0);
			gbc_firstName.fill = GridBagConstraints.HORIZONTAL;
			gbc_firstName.gridx = 1;
			gbc_firstName.gridy = 3;
			panel.add(firstName, gbc_firstName);
			firstName.setColumns(10);
		}
		{
			JLabel txtpnLastName = new JLabel();
			txtpnLastName.setText("Last Name:");
			GridBagConstraints gbc_txtpnLastName = new GridBagConstraints();
			gbc_txtpnLastName.fill = GridBagConstraints.VERTICAL;
			gbc_txtpnLastName.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnLastName.gridx = 0;
			gbc_txtpnLastName.gridy = 4;
			panel.add(txtpnLastName, gbc_txtpnLastName);
		}
		{
			lastName = new JTextField();
			GridBagConstraints gbc_lastName = new GridBagConstraints();
			gbc_lastName.insets = new Insets(0, 0, 5, 0);
			gbc_lastName.fill = GridBagConstraints.BOTH;
			gbc_lastName.gridx = 1;
			gbc_lastName.gridy = 4;
			panel.add(lastName, gbc_lastName);
			lastName.setColumns(10);
		}
		{
			JLabel txtpnPhoneNumber = new JLabel();
			txtpnPhoneNumber.setText("Phone Number:");
			GridBagConstraints gbc_txtpnPhoneNumber = new GridBagConstraints();
			gbc_txtpnPhoneNumber.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnPhoneNumber.fill = GridBagConstraints.VERTICAL;
			gbc_txtpnPhoneNumber.gridx = 0;
			gbc_txtpnPhoneNumber.gridy = 5;
			panel.add(txtpnPhoneNumber, gbc_txtpnPhoneNumber);
		}
		{
			phoneNumber = new JTextField();
			GridBagConstraints gbc_phoneNumber = new GridBagConstraints();
			gbc_phoneNumber.insets = new Insets(0, 0, 5, 0);
			gbc_phoneNumber.fill = GridBagConstraints.HORIZONTAL;
			gbc_phoneNumber.gridx = 1;
			gbc_phoneNumber.gridy = 5;
			panel.add(phoneNumber, gbc_phoneNumber);
			phoneNumber.setColumns(10);
		}
		{
			JLabel txtpnAddress = new JLabel();
			txtpnAddress.setText("Email Address:");
			GridBagConstraints gbc_txtpnAddress = new GridBagConstraints();
			gbc_txtpnAddress.insets = new Insets(0, 0, 5, 5);
			gbc_txtpnAddress.gridx = 0;
			gbc_txtpnAddress.gridy = 6;
			panel.add(txtpnAddress, gbc_txtpnAddress);
		}
		{
			emailAddress = new JTextField();
			emailAddress.setColumns(10);
			GridBagConstraints gbc_emailAddress = new GridBagConstraints();
			gbc_emailAddress.insets = new Insets(0, 0, 5, 0);
			gbc_emailAddress.fill = GridBagConstraints.HORIZONTAL;
			gbc_emailAddress.gridx = 1;
			gbc_emailAddress.gridy = 6;
			panel.add(emailAddress, gbc_emailAddress);
		}
		{
			supervisorCheckBox = new JCheckBox("Supervisor?");
			GridBagConstraints gbc_supervisorCheckBox = new GridBagConstraints();
			gbc_supervisorCheckBox.gridx = 1;
			gbc_supervisorCheckBox.gridy = 7;
			panel.add(supervisorCheckBox, gbc_supervisorCheckBox);
		}
	}

}
